auto.waitFor();
log("无障碍权限加载成功");
device.wakeUpIfNeeded()
log("屏幕已唤醒");
var dwc = device.width/2;
var dhc = device.height/2;
var dw = device.width;
var dh = device.height;
const {gest} = hamibot.env;
const {email} = hamibot.env;
const {应用分身} = hamibot.env;
const {qunmingcheng} = hamibot.env;
const {suoping} = hamibot.env;
const {phonelock} = hamibot.env;
log("应用配置加载成功")
function sendEmail(email,etitle,emsg){
  http.get("https://api.dzzui.com/api/mail?Host=smtp.163.com&Username=qauxinxishangbao@163.com&Password=YHGMOTAGCTYZPNNA&Port=465&SMTPSecure=ssl&addAddress="+email+"&title="+etitle+"&text="+emsg, {}, function(res, err) {
    if (err) {
      console.error("反馈邮件发送失败");
      return;
    }
    log("邮箱加载成功");
  });
}
log("邮箱配置加载成功")
sleep(3000)
if (gest=="up"){
    toast("上滑解锁")
  	swipe(500,2000,500,500,300)
  	log("上滑解锁成功")
}
if (gest=="down"){
  	toast("下滑解锁成功")
    swipe(500,500,500,2000,300)
 		log("下滑解锁成功")
}
if (gest=="right"){
  	toast("右滑解锁成功")
    swipe(0,700,1050,700,300)
  	log("右滑解锁成功")
}
if (gest=="left"){
  	toast("左滑解锁成功")
    swipe(1050,700,0,700,300)
	  log("左滑解锁成功")
}
//唤醒设备后上滑进入解锁界面
sleep(1000)
if (phonelock = "a"){
  const {密码} = hamibot.env;//读取配置中的密码
  var str = 密码.toString();
  var arr = str.split("");//将密码转为数组
  for(var x = 0 ; x < arr.length ; x = x + 1){
    desc(arr[x]).findOne().click();//依此读取数字中的数字并进行输入解锁
    log("开始运行解锁部分")
    sleep(100);
  }
}
log("锁屏解锁完成")
sleep(1000);
// 启动 Hamibot
launchApp('米游社');
log("米游社正常开启")
//暂停4~5秒，过开屏动画
sleep(7000);
if (id("homepageTv").exists()){
  while(!click(20,2222));
  log("检测到位于“我的”页面，开始执行返回操作")
}
if(id("mUpgradeDialogOk").exists()){
  log("检测更新弹窗");
  sendEmail(email,"ERROR-米游社需要更新","检测到更新弹窗的出现，请您及时更新米游社，脚本已停止运行。");
  home();
  log("邮件发送完成，停止脚本运行");
  exit()
}
sleep(4000)
if(id("tv_i_know").exists()){
  log("检测到青少年模式弹窗");
  id("tv_i_know").findOne().click();
  log("青少年模式已关闭");
}
sleep(1000);
if (id("homepageTv").exists()){
  while(!click(20,2222));
  log("检测到位于“我的”页面，开始执行返回操作")
}
if(id("mHomeChannelSetting").exists()){
  log("检测到米游社主页控件，开始执行后续步骤")
}else{
  log("警告发生未知错误，开始发送错误邮件。请将hamibot中的日志文件截图发送给开发者：yiwenluohua@163.com")
  sendEmail(email,"未知错误，请联系开发者","警告发生未知错误，请将hamibot中的日志文件截图发送给开发者：yiwenluohua@163.com")
  toast("警告发生未知错误，请将hamibot中的日志文件截图发送给开发者：yiwenluohua@163.com")
  exit()
}
gesture(300, [dw/8, dhc], [dw/8*7, dhc]);
log("开始切换模块")
sleep(3000);
gesture(300, [dw/8, dhc], [dw/8*7, dhc]);
log("开始切换模块")
sleep(3000);
gesture(300, [dw/8, dhc], [dw/8*7, dhc]);
log("开始切换模块")
sleep(3000);
gesture(300, [dw/8, dhc], [dw/8*7, dhc]);
log("开始切换模块")
sleep(3000);
gesture(300, [dw/8, dhc], [dw/8*7, dhc]);
log("开始切换模块")
sleep(3000);
gesture(300, [dw/8, dhc], [dw/8*7, dhc]);
log("开始切换模块")
sleep(7000);
while(!click('进入讨论区'));
log("执行进入讨论区的操作")
sleep(3000);
click(3,1230);
log("进入第一个帖子")
sleep(2000);
id("mPostDetailActionBarLikeView").findOne().click();
log("点赞")
sleep(4000);
id("mPostDetailActionBarLikeView").findOne().click();
log("取消点赞")
sleep(2000);
id("mPostDetailActionBarIvMore").findOne().click();
log("开始分享")
sleep(2000);
while(!click("QQ",0));
sleep(2000);
if(应用分身=="b"){
  log("检测到应用分身的存在，正在执行配置文件")
  while(!click("QQ",0));
  log("进入第一个qq")
}
sleep(5000);
if(id("et_search_keyword").exists()){
  log("检测到搜索模块,正常运行")
}else{
  log("警告发生未知错误，开始发送错误邮件。请将hamibot中的日志文件截图发送给开发者：yiwenluohua@163.com")
  sendEmail(email,"未知错误，请联系开发者","警告发生未知错误，请将hamibot中的日志文件截图发送给开发者：yiwenluohua@163.com")
  toast("警告发生未知错误，请将hamibot中的日志文件截图发送给开发者：yiwenluohua@163.com")
  exit()
}
id("et_search_keyword").findOne().click();
log("点击搜索栏")
sleep(2000);
setText(0,qunmingcheng);
log("填写提前设置好的文本")
sleep(2000);
className("android.widget.RelativeLayout").clickable(true).depth(8).findOne().click();
log("点击搜索结果,警告，请给需要分享的群或用户起一个没有重复的名字，不然会发生未知错误")
sleep(2000);
id("dialogRightBtn").findOne().click();
log("点击右侧按钮")
sleep(2000);
id("dialogLeftBtn").findOne().click();
log("点击左侧按钮")
sleep(2000);
while(!id("mHomeChannelSetting").exists()){
  log("检测是否回到主界面")
  back();
  log("执行一次返回操作")
  sleep(1000);
}
sleep(1000);
gesture(300, [dw/8*7, dhc], [dw/8, dhc]);
log("开始切换模块")
sleep(4000);
while(!click('进入讨论区'));
log("执行进入讨论区的操作")
sleep(3000);
click(3,1230);
sleep(2000);
id("mPostDetailActionBarLikeView").findOne().click();
log("点赞")
sleep(2000);
id("mPostDetailActionBarLikeView").findOne().click();
log("取消点赞")
sleep(2000);
while(!id("mHomeChannelSetting").exists()){
  log("检测是否回到主界面")
  back();
  log("执行一次返回操作")
  sleep(1000);
}
sleep(1000);
gesture(300, [dw/8*7, dhc], [dw/8, dhc]);
log("开始切换模块")
sleep(4000);
while(!click('进入讨论区'));
log("执行进入讨论区的操作")
sleep(3000);
click(3,1230);
log("进入第一个帖子")
sleep(2000);
id("mPostDetailActionBarLikeView").findOne().click();
log("点赞")
sleep(2000);
id("mPostDetailActionBarLikeView").findOne().click();
log("取消点赞")
sleep(1000);
while(!id("mHomeChannelSetting").exists()){
  log("检测是否回到主界面")
  back();
  log("执行一次返回操作")
  sleep(1000);
}
sleep(1000);
gesture(300, [dw/8*7, dhc], [dw/8, dhc]);
log("开始切换模块")
sleep(4000);
while(!click('进入讨论区'));
log("执行进入讨论区的操作")
sleep(3000);
click(3,1230);
log("进入第一个帖子")
sleep(2000);
id("mPostDetailActionBarLikeView").findOne().click();
log("点赞")
sleep(2000);
id("mPostDetailActionBarLikeView").findOne().click();
log("取消点赞")
sleep(2000);
while(!id("mHomeChannelSetting").exists()){
  log("检测是否回到主界面")
  back();
  log("执行一次返回操作")
  sleep(1000);
}
sleep(1000);
gesture(300, [dw/8*7, dhc], [dw/8, dhc]);
log("开始切换模块")
sleep(4000);
while(!click('进入讨论区'));
log("执行进入讨论区的操作")
sleep(3000);
click(3,1230);
log("进入第一个帖子")
sleep(2000);
id("mPostDetailActionBarLikeView").findOne().click();
log("点赞")
sleep(2000);
id("mPostDetailActionBarLikeView").findOne().click();
log("取消点赞")
sleep(2000);
while(!id("mHomeChannelSetting").exists()){
  log("检测是否回到主界面")
  back();
  log("执行一次返回操作")
  sleep(1000);
}
sleep(1000);
gesture(300, [dw/8*7, dhc], [dw/8, dhc]);
log("开始切换模块")
sleep(4000);
while(!click('进入讨论区'));
log("执行进入讨论区的操作")
sleep(3000);
click(3,1230);
log("进入第一个帖子")
sleep(2000);
id("mPostDetailActionBarLikeView").findOne().click();
log("点赞")
sleep(2000);
id("mPostDetailActionBarLikeView").findOne().click();
log("取消点赞")
sleep(2000);
while(!id("mHomeChannelSetting").exists()){
  log("检测是否回到主界面")
  back();
  log("执行一次返回操作")
  sleep(1000);
}
sleep(1000);
while(!click(900,2222));
log("检查任务是否完成")
sleep(5000)
if(id("coinContentTv").className("android.widget.TextView").text("已完成今日任务").exists()){
	sendEmail(email,"米游社自动获取米游币回执","您已完成日常活动的所有米游币的获取")
}else{
  sendEmail(email,"出现未知错误","警告发生未知错误，请将hamibot中的日志文件截图发送给开发者：yiwenluohua@163.com")
}
while(!click(20,2222));
log("返回米游社主页面")
home();
sleep(2000);
launch('com.android.bbk.lockscreen3');
exit()
